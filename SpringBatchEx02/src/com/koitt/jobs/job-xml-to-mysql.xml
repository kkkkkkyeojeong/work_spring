<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xsi:schemaLocation="http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- vo 클래스 빈 생성 -->
	<bean id="report" class="com.koitt.model.Report" scope="prototype" />


	<!-- ItemReader 빈 생성 -->
	<bean id="xmlItemReader" class="org.springframework.batch.item.xml.StaxEventItemReader">
		<property name="fragmentRootElementName" value="record" />
		<property name="resource" value="file:c:/sample/ex04/report.xml" />
		<property name="unmarshaller" ref="reportUnmarshaller" />
	</bean>
	
	
	<bean id="reportUnmarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
	 	<property name="classesToBeBound">
	 		<list>
	 			<value>com.koitt.model.Report</value>
	 		</list>
	 	</property> 
	 </bean>
	 
	 
	 <!-- ItemWriter 빈 생성 -->
	 <bean id="mysqlItemWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
		<property name="dataSource" ref="dataSource" />
		<property name="sql">
			<value>
			<![CDATA[
				INSERT INTO ex_report(refId, name, age, dob, income)
				VALUES (:refId, :name, :age, :dob, :income)
			]]>
			</value>
		</property>
		<!-- 객체의 필드명과 SQL의 name 파마미터(콜론+객체필드명) 사이를 자동으로 연결(Mapping) 시켜준다. -->
		<property name="itemSqlParameterSourceProvider">
			<bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
		</property>
	</bean>
	
	<!-- Batch Job 생성 -->
	<batch:job id="xmlToMySqlJob">
		<batch:step id="step1">
			<batch:tasklet>
				<batch:chunk reader="xmlItemReader"
							 writer="mysqlItemWriter"
							 commit-interval="1" />
			</batch:tasklet>
		</batch:step>
	</batch:job>
	 
	 

</beans>














